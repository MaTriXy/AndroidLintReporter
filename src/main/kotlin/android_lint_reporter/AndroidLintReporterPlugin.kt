/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package android_lint_reporter

import android_lint_reporter.github.GithubService
import android_lint_reporter.parser.Parser
import android_lint_reporter.parser.Renderer
import org.gradle.api.Project
import org.gradle.api.Plugin
import java.io.File

class AndroidLintReporterPlugin : Plugin<Project> {
    override fun apply(project: Project) {
        // Register a task
        project.tasks.register("parseAndSendLintResult") { task ->
            task.doLast {
                // val lintFilePath = "./app/build/reports/lint-results.xml"
                val tempFilePath = "./src/main/resources/lint-results.xml"
                val githubToken = ""
                val githubUsername = "worker8"
                val githubRepositoryName = "SimpleCurrency"
                val githubPullRequestId = "4"

                val file = File(tempFilePath)
                println("file: ${file.absoluteFile}")
//                println(file.readText())
                val fileTreeWalk = File("./").walkTopDown()
                fileTreeWalk.forEach {
                    if (it.name.contains("lint-results.xml")) {
                        println("path: ${it.absolutePath}")
                    }
                }

                val issues = Parser.parse(File(tempFilePath))
                val bodyString = Renderer.render(issues)

                val service = GithubService.create(
                        githubToken = githubToken,
                        username = githubUsername,
                        repoName = githubRepositoryName,
                        pullRequestId = githubPullRequestId
                )

                val response = service.postComment(bodyString).execute()
                if (response.isSuccessful) {
                    println("successfully posted lint result!")
                } else {
                    println("lint result posting unsuccessful, error: ${response.errorBody()}")
                }

                println("-----")
                true
            }
        }
    }
}
